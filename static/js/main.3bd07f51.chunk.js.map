{"version":3,"sources":["store.js","Loading.js","actions.js","Items.js","github-1.svg","Search.js","index.js"],"names":["initalState","repos","current","loading","end","store","createStore","state","action","type","payload","items","composeWithDevTools","applyMiddleware","thunk","Container","styled","div","Loading","span","Point","LoadingCycle","getVideo","word","limit","ref","page","dispatch","fetch","then","res","json","value","length","Content","main","List","ul","Flag","button","useDispatch","loadingRef","useRef","useState","inView","setInView","scrolled","setScrolled","useSelector","currentRepos","useEffect","IntersectionObserver","entry","isIntersecting","rootMargin","threshold","observe","map","item","index","key","href","html_url","target","src","owner","avatar_url","full_name","style","display","Skeleton","variant","width","height","timer","Nav","nav","githubImg","Search","input","attrs","Button","data","setData","inputEl","search","clearTimeout","setTimeout","onChange","e","onInput","onClick","App","Items","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3bd07f51.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initalState = {\r\n    repos: { },\r\n    current: \"\",\r\n    loading: false,\r\n    end: false,\r\n};\r\n\r\nfunction reducer (state = initalState, action) {\r\n\r\n    switch (action.type) {\r\n        case \"UPDATE\":\r\n        return {\r\n            ...state,\r\n            repos: {\r\n                ...state.repos,\r\n                [action.payload.current]: {\r\n                    items: [\r\n                        ...(state.repos[action.payload.current]?.items || []),\r\n                        ...(action.payload.repos[action.payload.current].items || [])\r\n                    ],\r\n                },\r\n            },\r\n            current: action.payload.current,\r\n            end: action.payload.end,\r\n        };\r\n        case \"GET\":\r\n        return {\r\n            ...state,\r\n            current: action.payload.current\r\n        };\r\n        case \"LOADING\":\r\n        return {\r\n            ...state,\r\n            loading: action.payload.loading\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 3;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Loading = styled.span`\n    position: relative;\n    width: 10px;\n    height: 10px;\n    animation: rotate 1s ease-in-out infinite;\n\n    @keyframes rotate {\n        from {\n            transform: rotate(0);\n        }\n\n        to {\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst Point = styled.span`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    &:nth-child(1) {\n        transform: rotate(0deg) translate(200%, 0);\n    }\n    &:nth-child(2) {\n        transform: rotate(72deg) translate(200%, 0);\n    }\n    &:nth-child(3) {\n        transform: rotate(144deg) translate(200%, 0);\n    }\n    &:nth-child(4) {\n        transform: rotate(216deg) translate(200%, 0);\n    }\n    &:nth-child(5) {\n        transform: rotate(288deg) translate(200%, 0);\n    }\n\n    &::after {\n        content: \"\";\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background: rgb(0, 106, 166);;\n        border-radius: 50%;\n        animation: scale 0.5s ease infinite alternate;\n    }\n\n    @keyframes scale {\n        from {\n        transform: scale(0.5);\n        }\n\n        to {\n        transform: scale(1);\n        }\n    }\n`;\n\nexport default function LoadingCycle() {\n    return (\n        <Container>\n        <Loading>\n            <Point />\n            <Point />\n            <Point />\n            <Point />\n            <Point />\n        </Loading>\n        </Container>\n    );\n}\n","export const getVideo = (word, limit, ref = \"\", page = 1) => {\n    return (dispatch) => {\n        if (!word) return\n        dispatch({ type: \"LOADING\", payload: { loading: true } });\n\n        return fetch(\n            `https://api.github.com/search/repositories?q=${word}&page=${page}&per_page=${limit}`\n        )\n        .then((res) => res.json())\n        .then((json) => {\n            dispatch({ type: \"LOADING\", payload: { loading: false } });\n            if (!word) return;\n            if (ref && ref.current.value !== word) return;\n\n            dispatch({\n                type: \"UPDATE\",\n                payload: {\n                    repos: {\n                        [word]: { items: json.items },\n                    },\n                    current: word,\n                    end: json?.items?.length ? false : true,\n                }\n            });\n        });\n    };\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { getVideo } from './actions';\r\n\r\nconst Content = styled.main`\r\n    padding: 60px 0 20px;\r\n    margin: 0 auto;\r\n    max-width: 720px;\r\n    text-align: center;\r\n    color: #555;\r\n    background: #fff;\r\n    min-height: 100%;\r\n`;\r\n\r\nconst List = styled.ul`\r\n    margin: 0 auto;\r\n    padding: 0 10px;\r\n    display: flex;\r\n    list-style-type: none;\r\n    flex-wrap: wrap;\r\n\r\n    li {\r\n        width: calc(100% / 2 - 20px);\r\n        padding: 10px 5px;\r\n        border-bottom: 1px solid rgb(233, 233, 233);\r\n\r\n        a {\r\n            display: flex;\r\n            color: #555;\r\n            text-decoration: none;\r\n        }\r\n\r\n        p {\r\n            overflow: hidden;\r\n            width: calc(100% - 165px);\r\n            white-space: nowrap;\r\n            text-overflow: ellipsis;\r\n            padding-left: 15px;\r\n            margin-top: 30px;\r\n            text-align: left;\r\n        }\r\n\r\n        @media (max-width: 530px) {\r\n            flex-basis: 100%;\r\n        }\r\n\r\n\r\n        img {\r\n            width: 120px;\r\n            object-fit: cover;\r\n            border-radius: 6px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n    border: none;\r\n    background: transparent;\r\n    color: #555;\r\n\r\n    &.active {\r\n        background: #ff0110;\r\n        color: #fff;\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nconst Flag = styled.div`\r\n    height: 50px;\r\n`;\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const loadingRef = useRef(null);\r\n    const [inView, setInView] = useState(false);\r\n    const [scrolled, setScrolled] = useState(0);\r\n    const { repos, current, loading, end } = useSelector((state) => ({\r\n        repos: state.repos,\r\n        current: state.current,\r\n        loading: state.loading,\r\n        end: state.end,\r\n    }));\r\n\r\n    let currentRepos = repos[current]?.items;\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            rootMargin: \"0px 0px 200px 0px\",\r\n            threshold: 1.0\r\n        };\r\n\r\n        let observer = new IntersectionObserver(\r\n            (entry) => {\r\n                if (entry[0].isIntersecting) {\r\n                    setInView(true);\r\n                }\r\n            },\r\n            options\r\n        );\r\n\r\n        observer.observe(loadingRef.current);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            setScrolled(scrolled + 1);\r\n        }\r\n        setInView(false);\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        //console.log(end)\r\n        if (end) return;\r\n        dispatch(getVideo(current, 10, '', scrolled));\r\n    }, [scrolled, end]);\r\n\r\n    return (\r\n        <>\r\n            <Content>\r\n                {!currentRepos?.length && <p>請輸入搜尋 repo 名稱</p>}\r\n                <List>\r\n                    {currentRepos?.map((item, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <a href={item?.html_url} target=\"_blank\">\r\n                                    <img src={item?.owner?.avatar_url} />\r\n                                    <p>{item?.full_name}</p>\r\n                                </a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                    {loading && <>\r\n                        {[0, 1].map((item, index) => {\r\n                            return (\r\n                                <li key={index} style={{ display: 'flex' }}>\r\n                                    <Skeleton variant=\"rect\" width={120} height={120} />\r\n                                    <p><Skeleton variant=\"text\" width={100} height={20}/></p>\r\n                                </li>\r\n                            );\r\n                        })}</>\r\n                    }\r\n                </List>\r\n                <Flag ref={loadingRef} />\r\n            </Content>\r\n            {loading && <><Skeleton /><Loading /></>}\r\n        </>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/github-1.3d7e9179.svg\";","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nlet timer = null;\r\nimport githubImg from './github-1.svg';\r\nimport { getVideo } from './actions';\r\n\r\nconst Nav = styled.nav`\r\n    background-color: rgb(0, 106, 166);\r\n    background-image: url(${githubImg});\r\n    background-size: 30px;\r\n    background-repeat: no-repeat;\r\n    background-position: 15px center;\r\n    padding: 5px 0;\r\n    text-align: center;\r\n    height: 48px;\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 0;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Search = styled.input.attrs({\r\n  type: \"search\"\r\n})`\r\n    background: transparent;\r\n    border: 0;\r\n    color: #fff;\r\n    border-bottom: 1px solid rgba(255, 255, 255, .5);\r\n    height: 35px;\r\n    width: 40%;\r\n    background: rgb(0, 88, 138);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 0 15px;\r\n    background: transparent;\r\n    border: 0;\r\n    color: #fff;\r\n    border: 1px solid rgb(0, 88, 138);\r\n    border-radius: 0px 4px 4px 0px;\r\n    height: 35px;\r\n`;\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const { repos } = useSelector((state) => ({\r\n        repos: state.repos\r\n    }));\r\n    const [data, setData] = useState(\"\");\r\n    const inputEl = useRef(null);\r\n    const search = (word) => {\r\n        return (dispatch) => {\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n\r\n            if (word in repos) {\r\n                dispatch({\r\n                    type: \"GET\",\r\n                    payload: {\r\n                        current: word\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            timer = setTimeout(() => {\r\n                dispatch(getVideo(word, 30, inputEl));\r\n            }, 1000);\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Nav>\r\n\r\n            <Search\r\n                ref={inputEl}\r\n                value={data}\r\n                onChange={(e) => setData(e.target.value)}\r\n                onInput={(e) => dispatch(search(e.target.value))}\r\n            />\r\n            <Button onClick={() => dispatch(search(data))}>search</Button>\r\n        </Nav>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Items from \"./Items\";\nimport Search from \"./Search\";\nimport \"./styles.css\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Search />\n            <Items />\n        </Provider>\n    );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}